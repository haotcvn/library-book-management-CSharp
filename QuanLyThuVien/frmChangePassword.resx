<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnLogin.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAB1
        MAAAdTAB3TNyzQAAAVVJREFUOE9jcC/wQcF19dP2A/F/IvF+DAOqayb9P3X2yv9LV28RxCC1GAaUV/bV
        A/F/fHjW3DX/z168BmZjGEAMLi7p/H/89MX/IBqrAvsutf/YxGE4r6Dl/6FjZ/6DaKwKrFuV/oMwNjkQ
        zsyu+7/nwPH/IJrBvE7uPzpO3Gb+/+ynLWA2NgOSUyv+b9116D+IZjAsl/pvPUf8v/Mi+f++K9X+h6/X
        BxuQvdcBbAhIHt2AuISi/+u37PkPohl0CkT/o2OYASA2AwODJLoBEdE5/1eu2/4fRAPlGYzRsXqm4H8Q
        BrHRNYNwcFja/8UrNv4H0RiSIKyUxItTMwj7BiT8n7NozX8QjVUBEGA4Gxl7eEf9nzZn+X8QjSHp7B5a
        D8T/8eHkjNL/E6cvArMxDLB3Cvjf0j39f/ekeQQxSC2GAdb2PvuB+D+RGDM3AgEvKACJwwySALVAnwg+
        IxdnAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnExit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAAAJlJREFUOE9joBXQAeIaIF4MxSA2SIwgEATilUD8D4gfAvFGIN4ExI+hYiA5kBqs
        ACRxBYgfALEXSAAJMAKxHxCDDAKpwWoIyHSQZkkwj0QA8h/IiZ5gHn5gAaVRACiQ7kOYBMEHIMYwBBTS
        6yBMOAApWoUF/wdiDEMoNoBiL1AciCBAUTSCAMUJCQRAEmQnZWRAdmYiETAwAAA9EzRLn+hZ1gAAAABJ
        RU5ErkJggg==
</value>
  </data>
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Usxv91K1dXX71pF3dXUQq6QhCEIQhCELmvJ//9k=
</value>
  </data>
</root>